Ext.define("Ext.ux.Routing",{routes:null,singleton:!0,init:function(a){var b=Ext.util.History;Ext.isDefined(a)||(a={});Ext.isDefined(a.routes)||(a.routes=[]);var d=this.tokenizeRoutes(a.routes);a.routes=d;Ext.apply(this,a);b.on("change",this.onRouteChange,this);b.init();if(b.getToken())this.onRouteChange(b.getToken());else this.navigate(a.defaultRoute)},tokenizeRoutes:function(a){var b,d=null,c=new Ext.util.MixedCollection;for(b=0;b<a.length;++b)d=this.tokenizeRoute(a[b].pattern),c.add(a[b].pattern,
{pattern:a[b].pattern,tokens:d,handler:a[b].handler});c.sortByKey();return c},tokenizeRoute:function(a){for(var b=a.split("/"),d=/\{(.*?)\}/,c,e=[],a=1;a<b.length;++a)""!==b[a]&&(c=d.test(b[a]),e.push({token:b[a],dynamic:c}));return e},navigate:function(a){window.location.href=a},back:function(){history.go(-1)},onRouteChange:function(a){if(a){var b,d,c;b=this.tokenizeRoute(a);for(d=0;d<this.routes.length;++d)if(a=this.routes.getAt(d).tokens,b.length==a.length){c=!0;for(j=0;j<a.length;++j)if(!a[j].dynamic&&
a[j].token!=b[j].token){c=!1;break}if(c)break}if(c){c={};var a=this.routes.getAt(d).tokens,e;for(j=0;j<a.length;++j)a[j].dynamic&&(e=a[j].token,e=e.substring(1,e.length-1),val=b[j].token,c[e]=val);this.routes.getAt(d).handler.call(this.scope,c)}}}});
